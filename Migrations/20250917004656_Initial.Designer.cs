// <auto-generated />
using System;
using MemoAtlas_Backend_ASP.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemoAtlas_Backend_ASP.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250917004656_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Memo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId", "Date")
                        .IsUnique();

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Prompt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Prompts");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.PromptAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MemoId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("NumberValue")
                        .HasColumnType("REAL");

                    b.Property<int>("PromptId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TextValue")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MemoId");

                    b.HasIndex("PromptId");

                    b.ToTable("PromptAnswers");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TagGroupId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TagGroupId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.TagGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ColorHex")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("TagGroups");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MemoTag", b =>
                {
                    b.Property<int>("MemosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TagsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MemosId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("MemoTag");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Memo", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.User", "User")
                        .WithMany("Memos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Prompt", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.User", "User")
                        .WithMany("Prompts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.PromptAnswer", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.Memo", "Memo")
                        .WithMany("PromptAnswers")
                        .HasForeignKey("MemoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.Prompt", "Prompt")
                        .WithMany("PromptAnswers")
                        .HasForeignKey("PromptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Memo");

                    b.Navigation("Prompt");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Session", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.User", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Tag", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.TagGroup", "TagGroup")
                        .WithMany("Tags")
                        .HasForeignKey("TagGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TagGroup");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.TagGroup", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.User", "User")
                        .WithMany("TagGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("MemoTag", b =>
                {
                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.Memo", null)
                        .WithMany()
                        .HasForeignKey("MemosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MemoAtlas_Backend_ASP.Models.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Memo", b =>
                {
                    b.Navigation("PromptAnswers");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.Prompt", b =>
                {
                    b.Navigation("PromptAnswers");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.TagGroup", b =>
                {
                    b.Navigation("Tags");
                });

            modelBuilder.Entity("MemoAtlas_Backend_ASP.Models.Entities.User", b =>
                {
                    b.Navigation("Memos");

                    b.Navigation("Prompts");

                    b.Navigation("Sessions");

                    b.Navigation("TagGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
